/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates and open the template
 * in the editor.
 */
package Interface.SystemAdminWorkArea;

import java.awt.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import Business.EcoSystem;
import Business.City.City;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * @author gauripatil
 */
public class ManageCity extends javax.swing.JPanel
{

	/**
	 * Creates new form ManageCity
	 */
	private JPanel userProcessContainer;

	private EcoSystem system;

	private String cityName;

	public ManageCity(JPanel userProcessContainer, EcoSystem system)
	{
		initComponents();
                synchronized (system) {}
		tblCity.addMouseListener(new MouseAdapter() {
			public void mouseClicked(MouseEvent e)
			{
				DefaultTableModel model = (DefaultTableModel) tblCity.getModel();
				int row = tblCity.getSelectedRow();
                                int column = tblCity.getSelectedColumn();
				if (row < 0)
				{
					JOptionPane.showMessageDialog(null, "Please select city");
					return;
				}
				cityName = model.getValueAt(row, column).toString();
			}
		});
		this.userProcessContainer = userProcessContainer;
		this.system = system;
		lblErrCity.setVisible(false);
		populateCityTable();
		tblCity.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 18));
	}

	public void populateCityTable()
	{
		DefaultTableModel model = (DefaultTableModel) tblCity.getModel();
		model.setRowCount(0);
		for (City city : system.getCitiesList())
		{

			Object[] row = new Object[1];
			row[0] = city.getName();
			model.addRow(row);

		}

	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCity = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        lblErrCity = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jUpdateCity = new javax.swing.JButton();
        jDeleteCity = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(25, 118, 242));

        tblCity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblCity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Area(City)"
            }
        ));
        jScrollPane1.setViewportView(tblCity);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage City");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("City");

        txtCity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCityActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(25, 118, 242));
        btnSubmit.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblErrCity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblErrCity.setForeground(new java.awt.Color(204, 0, 51));
        lblErrCity.setText("errMessage");

        btnBack.setBackground(new java.awt.Color(25, 118, 242));
        btnBack.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("BACK");
        btnBack.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jUpdateCity.setBackground(new java.awt.Color(25, 118, 242));
        jUpdateCity.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jUpdateCity.setForeground(new java.awt.Color(255, 255, 255));
        jUpdateCity.setText("Update");
        jUpdateCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        jUpdateCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jUpdateCityActionPerformed(evt);
            }
        });

        jDeleteCity.setBackground(new java.awt.Color(25, 118, 242));
        jDeleteCity.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jDeleteCity.setForeground(new java.awt.Color(255, 255, 255));
        jDeleteCity.setText("Delete");
        jDeleteCity.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        jDeleteCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jDeleteCityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(354, 354, 354)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(166, 166, 166)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(158, 158, 158)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(btnSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addComponent(lblErrCity))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jUpdateCity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(31, 31, 31)
                                        .addComponent(jDeleteCity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(403, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jUpdateCity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDeleteCity, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblErrCity))
                .addGap(18, 18, 18)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(302, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

	private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt)
	{
		// TODO add your handling code here:
		String cityName = txtCity.getText();
		if (cityName.isEmpty())
		{

			lblErrCity.setText("City name cannot be empty");
			lblErrCity.setVisible(true);
			return;

		}
                
                Pattern p = Pattern.compile("^[a-zA-Z\\s]+");
                Matcher m = p.matcher(cityName);  
                if(!m.matches())
                {
                    JOptionPane.showMessageDialog(null, "Invalid City Name");
                    return;
                }

		if (!isCityPresent(cityName))
		{
			City city = system.createAndAddCity();
			city.setName(cityName);
			populateCityTable();
			txtCity.setText("");
			lblErrCity.setVisible(false);
			JOptionPane.showMessageDialog(null, "City added successfully");
		}
		else
		{
			JOptionPane.showMessageDialog(null, "City already present");
		}
	}

	private boolean isCityPresent(String cityName)
	{
		if (null != system.getCitiesList() && !system.getCitiesList().isEmpty())
		{
			for (City city : system.getCitiesList())
			{
				if (cityName.equalsIgnoreCase(city.getName()))
				{
					return true;
				}
			}
		}
		return false;
	}

	private void btnBackActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_btnBackActionPerformed
		// TODO add your handling code here:
		userProcessContainer.remove(this);
		Component[] componentArray = userProcessContainer.getComponents();
		Component component = componentArray[componentArray.length - 1];
		SystemAdminWorkArea systemAdminwjp = (SystemAdminWorkArea) component;
		systemAdminwjp.populateJtree();
		CardLayout layout = (CardLayout) userProcessContainer.getLayout();
		layout.previous(userProcessContainer);
	}// GEN-LAST:event_btnBackActionPerformed

	private void jDeleteCityActionPerformed(java.awt.event.ActionEvent evt)
	{
		int row = tblCity.getSelectedRow();
		if (row < 0)
		{
			JOptionPane.showMessageDialog(null, "Please select city");
			return;
		}
		
		City tempCity = null;

		if (null != system.getCitiesList() && !system.getCitiesList().isEmpty())
		{
			for (City city : system.getCitiesList())
			{
				if (cityName.equalsIgnoreCase(city.getName()))
				{
					tempCity = city;
					break;
				}
			}
		}

		system.getCitiesList().remove(tempCity);

		populateCityTable();
	}

	private void txtCityActionPerformed(java.awt.event.ActionEvent evt)
	{// GEN-FIRST:event_txtCityActionPerformed
		// TODO add your handling code here:
	}// GEN-LAST:event_txtCityActionPerformed

	private void jUpdateCityActionPerformed(java.awt.event.ActionEvent evt)
	{
            int row = tblCity.getSelectedRow();
		if (row < 0)
		{
			JOptionPane.showMessageDialog(null, "Please select city");
			return;
		}
		
		City tempCity = null;

		if (null != system.getCitiesList() && !system.getCitiesList().isEmpty())
		{
			for (City city : system.getCitiesList())
			{
				if (cityName.equalsIgnoreCase(city.getName()))
				{
					tempCity = city;
					break;
				}
			}
		}

		new UpdateValue(tempCity,system,null,this).setVisible(true);
                
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton jDeleteCity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jUpdateCity;
    private javax.swing.JLabel lblErrCity;
    private javax.swing.JTable tblCity;
    private javax.swing.JTextField txtCity;
    // End of variables declaration//GEN-END:variables
}
