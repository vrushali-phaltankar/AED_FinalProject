/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.FoodEnterpriseAdminWorkArea;

import Business.City.City;
import Business.Community.Community;
import Business.Employee.CommunityAdminEmployee;
import Business.Employee.Employee;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FoodManagementEnterprise;
import Business.Roles.CommunityAdminRole;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Font;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gauripatil
 */
public class ManageCommunityAdmin extends javax.swing.JPanel {

    /**
     * Creates new form ManageCommunityAdmin
     */
     private JPanel userProcessContainer;
    private Enterprise enterprise;
    public ManageCommunityAdmin(JPanel userProcessContainer,Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        lblErrPassword.setVisible(false);
        lblErrUsername.setVisible(false);
        lblErrCommunityName.setVisible(false);
        populateTable();
        populateCombobox();
        tblCommunityAdmin.getTableHeader().setFont(new Font("Tahoma", Font.PLAIN, 18));
    }
    
    public void populateCombobox(){
        cboCommunity.removeAllItems();
        if (enterprise instanceof FoodManagementEnterprise){
            FoodManagementEnterprise foodManagementEnterprise = (FoodManagementEnterprise) enterprise;
            for (Community community : foodManagementEnterprise.getCommunityArrayList()){
                
//                if(!(community.getCommunityOrganization().getEmployeeDirectory().getEmployeeList().size() > 0 )){
//                    cboCommunity.addItem(community);
//                }
                cboCommunity.addItem(community);
                     
               }
        }

    }
    
    public void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) tblCommunityAdmin.getModel();
        model.setRowCount(0);
        if (enterprise instanceof FoodManagementEnterprise){
            FoodManagementEnterprise foodManagementEnterprise = (FoodManagementEnterprise) enterprise;
            
            for(Community community : foodManagementEnterprise.getCommunityArrayList() ){
                
                for (UserAccount useraccount : community.getCommunityOrganization().getUserAccountDirectory().getUserAccountArrayList()){
                    Object[] row = new Object[2];
                    row[0] = community.getCommunityName();
                    row[1] = useraccount.getUsername();
                    
                    model.addRow(row);
                }
            }
                
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCommunityAdmin = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        cboCommunity = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        txtPassword = new javax.swing.JPasswordField();
        lblErrUsername = new javax.swing.JLabel();
        lblErrPassword = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtAdminName = new javax.swing.JTextField();
        lblErrCommunityName = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(25, 118, 242));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Manage Community Admin");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(288, 6, -1, -1));

        tblCommunityAdmin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        tblCommunityAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Community Name", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCommunityAdmin);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 751, 101));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Select Community: ");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, -1, -1));

        cboCommunity.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(cboCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 240, 193, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Username :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, -1, -1));

        jLabel4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Password :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 350, -1, -1));

        txtUserName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 295, 193, -1));

        txtPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 354, 193, -1));

        lblErrUsername.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblErrUsername.setForeground(new java.awt.Color(255, 0, 51));
        lblErrUsername.setText("errMessage");
        add(lblErrUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 298, -1, -1));

        lblErrPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblErrPassword.setForeground(new java.awt.Color(255, 0, 51));
        lblErrPassword.setText("errMessage");
        add(lblErrPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 357, -1, -1));

        btnSubmit.setBackground(new java.awt.Color(25, 118, 242));
        btnSubmit.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Submit");
        btnSubmit.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 470, 130, 40));

        btnBack.setBackground(new java.awt.Color(25, 118, 242));
        btnBack.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("BACK");
        btnBack.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Community Admin Name :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 410, -1, -1));

        txtAdminName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        add(txtAdminName, new org.netbeans.lib.awtextra.AbsoluteConstraints(442, 408, 193, -1));

        lblErrCommunityName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblErrCommunityName.setForeground(new java.awt.Color(255, 0, 51));
        lblErrCommunityName.setText("errMessage");
        add(lblErrCommunityName, new org.netbeans.lib.awtextra.AbsoluteConstraints(677, 411, -1, -1));

        jButton1.setBackground(new java.awt.Color(25, 118, 242));
        jButton1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Delete User");
        jButton1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 470, 130, 40));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 43, 390, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        String userName = txtUserName.getText();
        String password = String.valueOf(txtPassword.getPassword());
        String name = txtAdminName.getText();
        
        if(userName.isEmpty() ){
            lblErrUsername.setText("User Name cannot be blank");
            lblErrUsername.setVisible(true);
            return;
        }
        
        
        Pattern p = Pattern.compile("^[a-z\\s]+");
        Matcher m = p.matcher(userName);  
        if(!m.matches())
        {
            txtUserName.setText("");
            txtPassword.setText("");
            txtAdminName.setText("");
            JOptionPane.showMessageDialog(null, "Invalid username");
            
            return;
        }
        
        if(password.isEmpty() ){
            lblErrPassword.setText("Password cannot be blank");
            lblErrPassword.setVisible(true);
            return;
        }
        
        p = Pattern.compile("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#&()–[{}]:;',?/*~$^+=<>]).{8,20}$");
        m = p.matcher(password);  
        if(!m.matches())
        {
            txtUserName.setText("");
            txtPassword.setText("");
            txtAdminName.setText("");
            JOptionPane.showMessageDialog(null, "Password should contain atleast One Uppercase, one Lowercase, a number and a special character");
            
            return;
        }
        
        if(name.isEmpty() ){
            
            txtAdminName.setText("Name cannot be blank");
            txtAdminName.setVisible(true);
            return;
        }
        
        p = Pattern.compile("^[a-zA-Z \\s]+");
        m = p.matcher(name);  
        if(!m.matches())
        {
             txtUserName.setText("");
            txtPassword.setText("");
            txtAdminName.setText("");
            JOptionPane.showMessageDialog(null, "Invalid Name");
            
            return;
        }
        
        Community c = (Community) cboCommunity.getSelectedItem();
        
        if(null != c.getCommunityOrganization().getUserAccountDirectory().getUserAccountArrayList() && !c.getCommunityOrganization().getUserAccountDirectory().getUserAccountArrayList().isEmpty())
        {
            for(UserAccount ua : c.getCommunityOrganization().getUserAccountDirectory().getUserAccountArrayList())
            {
                if(userName.equalsIgnoreCase(ua.getUsername()))
                {
                    txtUserName.setText("");
                    txtPassword.setText("");
                    txtAdminName.setText("");
                    JOptionPane.showMessageDialog(null, "User already exist in the System");
            
                    return;
                }
            }
        }
        Employee ee = c.getCommunityOrganization().getEmployeeDirectory().createEmployee(name,c,new CommunityAdminEmployee());
        UserAccount uu = c.getCommunityOrganization().getUserAccountDirectory().createUserAccount(userName, password, ee, new CommunityAdminRole());
        txtAdminName.setText("");
        txtPassword.setText("");
        txtUserName.setText("");
        lblErrCommunityName.setText("");
        lblErrPassword.setText("");
        lblErrUsername.setText("");
        JOptionPane.showMessageDialog(null, "Community Admin successfully created");

        
        populateTable();
        
        
        
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int row = tblCommunityAdmin.getSelectedRow();
		if (row < 0)
		{
			JOptionPane.showMessageDialog(null, "Please select User");
			return;
		}
		
		UserAccount tempUA = null;
                Community tempCommunity = null;
                DefaultTableModel model = (DefaultTableModel) tblCommunityAdmin.getModel();
		String username = model.getValueAt(row, 1).toString();
                String communityName = model.getValueAt(row, 0).toString();
                
                FoodManagementEnterprise foodManagementEnterprise = (FoodManagementEnterprise) enterprise;
            
            for(Community community : foodManagementEnterprise.getCommunityArrayList() ){
                if(communityName.equalsIgnoreCase(community.getCommunityName()))
                        {
                            tempCommunity = community;
                            break;
                        }
            }
                
            for (UserAccount useraccount : tempCommunity.getCommunityOrganization().getUserAccountDirectory().getUserAccountArrayList()){
                     if(username.equalsIgnoreCase(useraccount.getUsername()))
                        {
                            tempUA = useraccount;
                            break;
                        }
                
                }
               tempCommunity.getCommunityOrganization().getUserAccountDirectory().getUserAccountArrayList().remove(tempUA);
                populateTable();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cboCommunity;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblErrCommunityName;
    private javax.swing.JLabel lblErrPassword;
    private javax.swing.JLabel lblErrUsername;
    private javax.swing.JTable tblCommunityAdmin;
    private javax.swing.JTextField txtAdminName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
